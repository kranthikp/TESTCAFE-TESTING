Automation Testing using TestCafe

Step 1 Project setup
--------------------
npm init -y

npm install testcafe

npm install prettier


Step 2 Prettier setup
---------------------
add & configure .prettierrc in root

{
    "semi": false,
    "singleQuote": true,
    "useTabs": true,
    "tabWidth": 2,
    "bracketSpacing": true,
    "arrowParens": "avoid",
    "trailingComma": "es5"
}

Step 3 First automation Script
------------------------------
import { Selector } from 'testcafe'

// prettier-ignore
fixture `Getting started with TestCafe`
    .page `https://devexpress.github.io/testcafe/example/`    

test('My First TestCafe Test', async t =>{
    //here goes testcafe code
    await t.takeElementScreenshot("#developer-name") // helpful for visual regression to compare and assert
    await t.typeText("#submit-button", "kranthi")
    await t.click(submit_button)
   
})

run script in chrome

  "scripts": {
    "test:chrome": "testcafe chrome ./tests",
  }

Step 4 assertions & test Scripts for cross browser
---------------------------------------------------
basic.test.js

 await t.expect(Selector('#article-header').innerText).contains('kranthi') // kkpanda

Adding script to package.json for cross browser

  "scripts": {
    "test:chrome": "testcafe chrome ./tests",
    "test:chrome:headless": "testcafe chrome:headless ./tests",
    "test:chrome:mobile": "testcafe chrome:emulation:device=iphone X ./tests",
    "test:safari": "testcafe safari ./tests",
    "test:firefox": "testcafe firefox ./tests"
  }

Step 5 test speed, waits, Selector, screeshots
----------------------------------------------

import { Selector } from 'testcafe'

// prettier-ignore
fixture `Getting started with TestCafe`
    .page `https://devexpress.github.io/testcafe/example/`
    .before(async t=>{
        // Test setup goes here
        // await runDatabaseReset()
        // await seeTestData
    })
    .beforeEach(async t=>{
        // Runs before each test
        await t.setTestSpeed(1) // speed should be between 0.01 to 
    })
    .after(async t=>{
        // Cleaning test data
        // Logging and sending data to monitoring systems
    })
    .afterEach(async t=>{
        // Runs after each test
    })
    

test('My First TestCafe Test', async t =>{
    //here goes testcafe code
    const dev_name_input = Selector("#developer-name")
    const submit_button = Selector("#submit-button")
    const articalText = Selector('#article-header').innerText

    // await t.takeScreenshot({fullPage: true})

    await t.takeElementScreenshot(submit_button) // helpful for visual regression to compare and assert
    await t.typeText(dev_name_input, "kranthi")
    // await t.wait(3000)
    await t.click(submit_button)
    await t.expect(articalText).contains('kranthi') // kkpanda
})